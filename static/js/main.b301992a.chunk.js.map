{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","handleChange","target","value","setState","handleSubmit","e","preventDefault","state","props","contacts","find","contact","alert","onSetContacts","reset","this","onSubmit","type","onChange","Component","ContactItem","filter","onDelateContacts","id","toLowerCase","includes","onClick","ContactList","map","Filter","autoComplete","defaultProps","App","handleFilter","LocalContacts","JSON","parse","localStorage","getItem","setItem","stringify","prevState","uuIdv4","updatedContacts","handleSetContacts","handleDelateContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b301992a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nexport default class ContactForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      number: '',\n    };\n  }\n\n  static propTypes = {\n    onSubmit: PropTypes.func,\n    onSetContacts: PropTypes.func,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.find(contact => contact.name === name))\n      return alert(`${name} is already in contacts`);\n\n    this.props.onSetContacts(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...this.state, ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <h2>Name</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <h2>Number</h2>\n          <input\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport default function ContactItem({ contact, filter, onDelateContacts }) {\n  const { id, name, number } = contact;\n\n  return (\n    <>\n      {name.toLowerCase().includes(filter.toLowerCase()) && (\n        <>\n          <li>{`${name}: ${number}`} </li>\n          <button onClick={() => onDelateContacts(id)}>Delate</button>\n        </>\n      )}\n    </>\n  );\n}\n\nContactItem.defaultProps = {\n  filter: '',\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object,\n  filter: PropTypes.string,\n  onDelateContacts: PropTypes.func,\n};\n","import ContactItem from './ContactItem';\nimport PropTypes from 'prop-types';\n\nexport default function ContactList({ contacts, filter, onDelateContacts }) {\n  return (\n    <>\n      {contacts[0] && (\n        <ul>\n          {contacts.map(contact => (\n            <ContactItem\n              key={contact.id}\n              contact={contact}\n              filter={filter}\n              onDelateContacts={onDelateContacts}\n            />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nContactList.defaultProps = {\n  filter: '',\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  onDelateContacts: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Filter({ filter, onChange }) {\n  return (\n    <div>\n      <label>\n        Find contacts by name\n        <br />\n        <input\n          name=\"filter\"\n          autoComplete=\"off\"\n          value={filter}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  filter: '',\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { Component } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { v4 as uuIdv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const LocalContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    this.setState({ contacts: LocalContacts });\n  }\n\n  componentDidUpdate() {\n    const { contacts } = this.state;\n\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }\n\n  handleSetContacts(name, number) {\n    this.setState(prevState => {\n      const { contacts } = prevState;\n      const newContacts = [...contacts, { id: uuIdv4(), name, number }];\n\n      return { contacts: newContacts };\n    });\n  }\n\n  handleDelateContacts(id) {\n    this.setState(prevState => {\n      const { contacts } = prevState;\n      const updatedContacts = contacts.filter(contact => contact.id !== id);\n\n      return { contacts: [...updatedContacts] };\n    });\n  }\n\n  handleFilter = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          contacts={contacts}\n          onSubmit={this.handleSubmit}\n          onSetContacts={(name, number) => this.handleSetContacts(name, number)}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilter} />\n        <ContactList\n          contacts={contacts}\n          filter={filter}\n          onDelateContacts={id => this.handleDelateContacts(id)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}