{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","handleChange","target","value","setState","handleSubmit","e","preventDefault","state","props","contacts","find","contact","alert","onSetContacts","reset","this","onSubmit","type","onChange","Component","ContactItem","filter","onDelateContacts","id","toLowerCase","includes","onClick","ContactList","map","Filter","autoComplete","defaultProps","App","handleFilter","LocalContacts","JSON","parse","localStorage","getItem","setItem","stringify","prevState","uuIdv4","updatedContacts","handleSetContacts","handleDelateContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbe073e4.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      number: '',\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    onSetContacts: PropTypes.func,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    if (contacts.find(contact => contact.name === name))\r\n      return alert(`${name} is already in contacts`);\r\n\r\n    this.props.onSetContacts(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...this.state, ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          <h2>Number</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ContactItem({ contact, filter, onDelateContacts }) {\r\n  const { id, name, number } = contact;\r\n\r\n  return (\r\n    <>\r\n      {name.toLowerCase().includes(filter.toLowerCase()) && (\r\n        <>\r\n          <li>{`${name}: ${number}`} </li>\r\n          <button onClick={() => onDelateContacts(id)}>Delate</button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactItem.defaultProps = {\r\n  filter: '',\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.object,\r\n  filter: PropTypes.string,\r\n  onDelateContacts: PropTypes.func,\r\n};\r\n","import ContactItem from './ContactItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactList({ contacts, filter, onDelateContacts }) {\r\n  return (\r\n    <>\r\n      {contacts[0] && (\r\n        <ul>\r\n          {contacts.map(contact => (\r\n            <ContactItem\r\n              key={contact.id}\r\n              contact={contact}\r\n              filter={filter}\r\n              onDelateContacts={onDelateContacts}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.defaultProps = {\r\n  filter: '',\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n  onDelateContacts: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ filter, onChange }) {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          name=\"filter\"\r\n          autoComplete=\"off\"\r\n          value={filter}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.defaultProps = {\r\n  filter: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport { v4 as uuIdv4 } from 'uuid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const LocalContacts = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n    if (LocalContacts) this.setState({ contacts: LocalContacts });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { contacts } = this.state;\r\n\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }\r\n\r\n  handleSetContacts(name, number) {\r\n    this.setState(prevState => {\r\n      const { contacts } = prevState;\r\n      const newContacts = [...contacts, { id: uuIdv4(), name, number }];\r\n\r\n      return { contacts: newContacts };\r\n    });\r\n  }\r\n\r\n  handleDelateContacts(id) {\r\n    this.setState(prevState => {\r\n      const { contacts } = prevState;\r\n      const updatedContacts = contacts.filter(contact => contact.id !== id);\r\n\r\n      return { contacts: [...updatedContacts] };\r\n    });\r\n  }\r\n\r\n  handleFilter = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          contacts={contacts}\r\n          onSubmit={this.handleSubmit}\r\n          onSetContacts={(name, number) => this.handleSetContacts(name, number)}\r\n        />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onChange={this.handleFilter} />\r\n        <ContactList\r\n          contacts={contacts}\r\n          filter={filter}\r\n          onDelateContacts={id => this.handleDelateContacts(id)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}